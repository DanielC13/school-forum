{"version":3,"sources":["containers/Layout.js","img/random.jpg","containers/Login.js","routes.js","App.js","index.js"],"names":["Content","Layout","Header","Footer","Sider","SubMenu","Menu","CusLayout","props","onCollapse","collapsed","setState","customTrigger","React","createElement","state","MenuUnfoldOutlined","MenuFoldOutlined","className","style","color","fontSize","marginTop","logout","cookies","remove","document","location","reload","token","get","this","minHeight","trigger","collapsible","theme","defaultSelectedKeys","mode","Item","icon","NotificationOutlined","BookOutlined","TeamOutlined","title","padding","backgroundColor","extra","placement","onConfirm","okText","cancelText","QuestionCircleOutlined","type","margin","textAlign","Component","withCookies","LoginForm","useCookies","setCookie","useState","error","seterror","onFinish","values","a","opt","path","axios","post","username","password","i","data","access_token","window","name","initialValues","remember","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","showIcon","valuePropName","noStyle","href","htmlType","src","randomimg","alt","width","height","PasswordResetForm","loading","setloading","value","email","then","res","MailOutlined","closable","PasswordResetConfirm","new_password1","new_password2","uid","match","params","validator","_","length","Promise","reject","Error","resolve","hasFeedback","KeyOutlined","getFieldValue","float","to","replace","BaseRouter","console","log","verify","exact","component","from","defaults","baseURL","App","tkn","verification","setverification","stat","status","rel","CookiesProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.67f4d7a5.chunk.js","sourcesContent":["import { Layout, Menu, Breadcrumb, Button, PageHeader, Popconfirm } from \"antd\";\r\nimport {\r\n  DesktopOutlined,\r\n  NotificationOutlined,\r\n  FileOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  BookOutlined,\r\n  QuestionCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport \"./Layout.css\";\r\nimport { instanceOf } from \"prop-types\";\r\nimport { withCookies, Cookies } from \"react-cookie\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass CusLayout extends React.Component {\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    const { cookies } = props;\r\n    this.state = {\r\n      collapsed: false,\r\n      token: cookies.get(\"tkn\"),\r\n    };\r\n  }\r\n\r\n  onCollapse = (collapsed) => {\r\n    // console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  customTrigger = () => {\r\n    return React.createElement(\r\n      this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n      {\r\n        className: \"anticon anticon-left\",\r\n        style: {\r\n          color: \"rgba(255,255,255,0.65)\",\r\n          fontSize: \"20px\",\r\n          marginTop: \"15px\",\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  logout = () => {\r\n    const { cookies } = this.props;\r\n    cookies.remove(\"tkn\");\r\n    document.location.reload();\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Sider\r\n          trigger={this.customTrigger()}\r\n          collapsible\r\n          collapsed={collapsed}\r\n          onCollapse={this.onCollapse}\r\n        >\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n            <Menu.Item key=\"1\" icon={<NotificationOutlined />}>\r\n              Announcement\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<BookOutlined />}>\r\n              Course\r\n            </Menu.Item>\r\n            <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\r\n              <Menu.Item key=\"6\">Team 1</Menu.Item>\r\n              <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n            </SubMenu>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <PageHeader\r\n            className=\"site-layout-background\"\r\n            style={{ padding: \"10px\", backgroundColor: \"#001529\" }}\r\n            extra={[\r\n              <Popconfirm\r\n                placement=\"bottomRight\"\r\n                title=\"You about to logout, are you sure?\"\r\n                onConfirm={this.logout}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n                icon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\r\n              >\r\n                <Button key=\"1\" type=\"primary\">\r\n                  Logout\r\n                </Button>\r\n                ,\r\n              </Popconfirm>,\r\n            ]}\r\n          ></PageHeader>\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n              <Breadcrumb.Item>User</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: 24, minHeight: 360 }}\r\n            >\r\n              Bill is a cat.\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Ant Design ©2018 Created by Ant UED\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(CusLayout);\r\n","export default __webpack_public_path__ + \"static/media/random.a2c77e76.jpg\";","import { Alert, Form, Input, Button, Checkbox } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  KeyOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\nimport randomimg from \"../img/random.jpg\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const LoginForm = () => {\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"token\"]);\r\n  const [error, seterror] = useState(null);\r\n\r\n  const onFinish = async (values) => {\r\n    let opt = { path: \"/\" };\r\n    try {\r\n      let i = await axios.post(\"dj-rest-auth/login/\", {\r\n        username: values.username,\r\n        password: values.password,\r\n      });\r\n      setCookie(\"tkn\", i.data.access_token, opt);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      seterror(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"con\">\r\n      <div className=\"inner-con\">\r\n        <div className=\"form-container\">\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <h1>Login</h1>\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your Username!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Username\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your Password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {error ? (\r\n                <Alert\r\n                  message=\"Wrong username or password\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                  style={{ fontSize: \"12px\" }}\r\n                />\r\n              ) : (\r\n                <span></span>\r\n              )}\r\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                <Checkbox>Remember me</Checkbox>\r\n              </Form.Item>\r\n\r\n              <a className=\"login-form-forgot\" href=\"password-reset\">\r\n                Forgot password\r\n              </a>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                Log in\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        <img\r\n          className=\"picture-container\"\r\n          src={randomimg}\r\n          alt=\"\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PasswordResetForm = () => {\r\n  const [error, seterror] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n  const onFinish = async (value) => {\r\n    try {\r\n      setloading(true);\r\n      let i = await axios\r\n        .post(\"dj-rest-auth/password/reset/\", {\r\n          email: value.email,\r\n        })\r\n        .then((res) => setloading(false));\r\n      seterror(false);\r\n    } catch (error) {\r\n      seterror(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"con\">\r\n      <div className=\"inner-con\">\r\n        <div className=\"form-container reset-form\">\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <h1>Forgot password</h1>\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                { type: \"email\", message: \"The input is not valid E-mail!\" },\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your Email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Email\"\r\n              />\r\n            </Form.Item>\r\n            {error ? (\r\n              <Alert\r\n                message=\"Something went wrong...Please try again.\"\r\n                type=\"error\"\r\n                showIcon\r\n                closable\r\n                style={{ fontSize: \"12px\" }}\r\n              />\r\n            ) : error == null ? (\r\n              <span></span>\r\n            ) : (\r\n              <Alert\r\n                message=\"Password Reset Link has been sended,check your mail\"\r\n                type=\"success\"\r\n                showIcon\r\n                style={{ fontSize: \"12px\" }}\r\n              />\r\n            )}\r\n            <p>Reset Password link will be send to your email</p>\r\n            <Form.Item>\r\n              <Button type=\"primary\" loading={loading} htmlType=\"submit\">\r\n                Send Email\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        <img\r\n          className=\"picture-container\"\r\n          src={randomimg}\r\n          alt=\"\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PasswordResetConfirm = (props) => {\r\n  const [error, seterror] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onFinish = async (value) => {\r\n    try {\r\n      setloading(true);\r\n      let i = await axios\r\n        .post(\"dj-rest-auth/password/reset/confirm/\", {\r\n          new_password1: value.new_password1,\r\n          new_password2: value.new_password2,\r\n          uid: props.match.params.uid,\r\n          token: props.match.params.token,\r\n        })\r\n        .then((res) => setloading(false));\r\n      seterror(false);\r\n    } catch (error) {\r\n      seterror(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"con\">\r\n      <div className=\"inner-con\">\r\n        <div className=\"form-container\">\r\n          {error || error == null ? (\r\n            <Form\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={onFinish}\r\n            >\r\n              <h1>Reset password</h1>\r\n              <Form.Item\r\n                name=\"new_password1\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your new password!\",\r\n                  },\r\n                  {\r\n                    validator: (_, password) => {\r\n                      if (password.length < 8 && password.length > 0) {\r\n                        return Promise.reject(\r\n                          new Error(\"Password cannot less than 8 letters\")\r\n                        );\r\n                      } else if (password.length >= 8) {\r\n                        return Promise.resolve();\r\n                      }\r\n                    },\r\n                  },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input\r\n                  prefix={<KeyOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"New password\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"new_password2\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your confirm password!\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator: (_, password) => {\r\n                      if (getFieldValue(\"new_password1\") !== password) {\r\n                        return Promise.reject(\r\n                          new Error(\r\n                            \"New password and confirm password must be the same!\"\r\n                          )\r\n                        );\r\n                      } else if (\r\n                        getFieldValue(\"new_password1\") == password &&\r\n                        password.length >= 8\r\n                      ) {\r\n                        return Promise.resolve();\r\n                      } else if (password.length < 8 && password.length > 0) {\r\n                        return Promise.reject(\r\n                          new Error(\"Password cannot less than 8 letters\")\r\n                        );\r\n                      }\r\n                    },\r\n                  }),\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input\r\n                  prefix={<KeyOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm password\"\r\n                />\r\n              </Form.Item>\r\n              {error ? (\r\n                <Alert\r\n                  message=\"Something went wrong...Please try again.\"\r\n                  type=\"error\"\r\n                  showIcon\r\n                  style={{ fontSize: \"12px\" }}\r\n                />\r\n              ) : error == null ? (\r\n                <span></span>\r\n              ) : (\r\n                <Alert\r\n                  message=\"Password Reset Complete!\"\r\n                  type=\"success\"\r\n                  showIcon\r\n                  style={{ fontSize: \"12px\" }}\r\n                />\r\n              )}\r\n              <Form.Item>\r\n                <Button type=\"primary\" loading={loading} htmlType=\"submit\">\r\n                  Reset\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          ) : (\r\n            <>\r\n              <Alert\r\n                message=\"Reset password success!\"\r\n                type=\"success\"\r\n                showIcon\r\n                style={{ fontSize: \"15px\" }}\r\n              />\r\n              <p style={{ float: \"right\", fontSize: \"15px\" }}>\r\n                Return to{\" \"}\r\n                <Link to=\"/login\" replace>\r\n                  Log in\r\n                </Link>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n        <img\r\n          className=\"picture-container\"\r\n          src={randomimg}\r\n          alt=\"\"\r\n          width=\"100\"\r\n          height=\"100\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { LoginForm, PasswordResetForm,PasswordResetConfirm } from \"./containers/Login\";\r\nimport CusLayout from \"./containers/Layout\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\n\r\nconst BaseRouter = (props) => {\r\n  console.log(props.verify);\r\n  return props.verify ? (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={CusLayout} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  ) : (\r\n    <Switch>\r\n      <Route exact path=\"/login\" component={LoginForm} />\r\n      <Route exact path=\"/password-reset\" component={PasswordResetForm} />\r\n      <Route path=\"/password-reset-confirm/:uid/:token\" component={PasswordResetConfirm} />\r\n      <Redirect from=\"*\" to=\"/login\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default BaseRouter;\r\n","import \"./App.less\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport CusLayout from \"./containers/Layout\";\nimport BaseRouter from \"./routes\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { CookiesProvider, useCookies } from \"react-cookie\";\n\naxios.defaults.baseURL = \"http://127.0.0.1:8000\";\n// axios.defaults.baseURL = document.location.origin\n\nfunction App() {\n  const [cookies] = useCookies([\"token\"]);\n  let boo = () => {\n    if (cookies.tkn) return true;\n    return false;\n  };\n  const [verification, setverification] = useState(boo());\n  const verify = async () => {\n    if (cookies.tkn) {\n      let res = await axios.post(\"dj-rest-auth/token/verify/\", {\n        token: cookies.tkn,\n      });\n      let stat = res.status;\n      return stat == 200 ? true : false;\n    }\n    return false;\n  };\n\n  verify().then((res) => setverification(res));\n  console.log(verification);\n  return (\n    <div className=\"App\">\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/css2?family=Sarabun:wght@400&display=swap\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined\"\n        rel=\"stylesheet\"\n      ></link>\n      <CookiesProvider>\n        <BrowserRouter>\n          <BaseRouter href=\"this.props.href\" verify={verification}></BaseRouter>\n        </BrowserRouter>\n      </CookiesProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}